@page "/languages"
@using BlazorDemo.Shared.ApiModels;

@inject HttpClient httpClient

<h3>
    Languages
    @if (!string.IsNullOrEmpty(searchTerm))
    {
        <span class="text-secondary">(Starting with "@searchTerm")</span>
    }
</h3>

<input @bind-value="searchTerm" @bind-value:event="oninput" />
<button @onclick="() => searchTerm = null">Clear</button>
<ul>
    @foreach (var language in filteredLanguages)
    {
        <li>@language.Name</li>
    }
</ul>

<h4>Add language</h4>
<input @bind-value="newLanguageName" />
<button @onclick="AddLanguage">Add</button>

@code {
    private List<LanguageApiModel> languages = new();
    private string? searchTerm;
    private IEnumerable<LanguageApiModel> filteredLanguages => languages.Where(l => l.Name.StartsWith(searchTerm ?? "", StringComparison.InvariantCultureIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        languages = await GetLanguages();
    }


    private string? newLanguageName;
    private async Task AddLanguage()
    {
        if (string.IsNullOrEmpty(newLanguageName)) return;

        await httpClient.PostAsJsonAsync("api/languages", new LanguageApiModel
        {
            HasWasmCompiler = false,
            Name = newLanguageName
        });

        languages = await GetLanguages();

        newLanguageName = null;
    }

    private async Task<List<LanguageApiModel>> GetLanguages()
    {
        var languages = await httpClient.GetFromJsonAsync<List<LanguageApiModel>>("api/languages");
        return languages.OrderBy(l => l.Name).ToList();
    }
}
